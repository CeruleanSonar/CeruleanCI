on:
  workflow_dispatch:
  push:
jobs:
  build:
    # note that we can't build for macOS from Linux
    runs-on: macos-latest
    steps:
    - name: Cache Host keys
      uses: actions/cache@v4
      with:
        path: |
          ~/.ssh/known_hosts
        key: ssh-known-hosts
    - name: Install software
      if: runner.os == 'macOS'
      run:
        brew install mercurial jaq
    - name: Add code signing dependencies
      if: runner.os == 'macOS'
      run: |
        echo "${{ secrets.APPLE_P12_BASE64 }}" | base64 --decode > ${{ runner.temp }}/apple.p12
        echo CSC_LINK=${{ runner.temp }}/apple.p12 >> $GITHUB_ENV
        echo CSC_KEY_PASSWORD=mysecurepassword >> $GITHUB_ENV
    - name: Mercurial Clone
      run: |
        eval "$(ssh-agent -s)"
        ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
        hg clone --ssh="ssh -o 'StrictHostKeyChecking accept-new'" ssh://hg@codebasehq.com/digi-labs/cerulean/sonarview.hg ./sonarview
    - name: Setup Node
      uses: actions/setup-node@v4
      with:
        node-version: lts/*
    - name: Prebuild
      run: |
        cd ./sonarview
        npm ci
        # patch repo name so electron-builder puts releases in THIS repo
        # npm pkg set repository.url="${{ github.repositoryUrl }}"
        
        jaq -i '.repository.url="${{ github.repositoryUrl }}"' package.json
        # delete lines starting with `identity:` (un-disables mac code signing)
        # note that code signing options passed via CSC_... environment variables
        sed -i.bak -E '/^[[:blank:]]*identity:/d' quasar.config.js
    - name: Build
      run: |
        cd ./sonarview
        npx quasar build -m electron -T all -P always
      env:
        # for creating github release
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # for notarization
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.APPLE_APP_SPECIFIC_PASSWORD }}
